syntax = "proto3";

option go_package = "/api";

package api;

message Empty {
}

message Account{
	string authentication_scheme = 1;
	bool client_server_negotiation = 2;
	string cs_negotiation_policy = 3;
	string host = 4;
	int32 port = 5;
	string client_user = 6;
	string client_zone = 7;
	string proxy_user = 8;
	string proxy_zone = 9;
	string server_dn = 10;
	string password = 11;
	string ticket = 12;
	int32 pam_ttl = 13;
}

message Entry {
	int64 id = 1;
	string type = 2; // "file" or "directory"
	string name = 3;
	string path = 4;
	string owner = 5;
	int64 size = 6;
	string create_time = 7; // RFC3339 format
	string modify_time = 8; // RFC3339 format
	string checksum = 9;
}


message Access {
	string path = 1;
	string user_name = 2;
	string user_zone = 3;
	string user_type = 4;
	string access_level = 5;
}

enum ErrorType {
	NONE = 0;
	GENERAL = 1;
	FILENOTFOUND = 2;
}

message SoftError {
	ErrorType type = 1;
	string message = 2;
}

message LoginRequest{
	Account account = 1;
	string application_name = 2;
}

message LoginResponse{
	string session_id = 1;
}

message LogoutRequest{
	string session_id = 1;
}

message ListRequest {
	string session_id = 1;
    string path = 2;
}

message ListResponse {
	repeated Entry entries = 1;
}

message StatRequest {
	string session_id = 1;
    string path = 2;
}

message StatResponse {
	Entry entry = 1;
	SoftError error = 2;
}

message ExistsDirRequest {
	string session_id = 1;
    string path = 2;
}

message ExistsDirResponse {
	bool exist = 1;
}

message ExistsFileRequest {
	string session_id = 1;
    string path = 2;
}

message ExistsFileResponse {
	bool exist = 1;
}

message ListDirACLsWithGroupUsersRequest {
	string session_id = 1;
    string path = 2;
}

message ListDirACLsWithGroupUsersResponse {
	repeated Access accesses = 1;
}

message ListFileACLsWithGroupUsersRequest {
	string session_id = 1;
    string path = 2;
}

message ListFileACLsWithGroupUsersResponse {
	repeated Access accesses = 1;
}

message RemoveFileRequest {
	string session_id = 1;
	string path = 2;
	bool force = 3;
}

message RemoveDirRequest {
	string session_id = 1;
	string path = 2;
	bool recurse = 3;
	bool force = 4;
}

message MakeDirRequest {
	string session_id = 1;
	string path = 2;
	bool recurse = 3;
}

message RenameDirToDirRequest {
	string session_id = 1;
	string source_path = 2;
	string destination_path = 3;
}

message RenameFileToFileRequest {
	string session_id = 1;
	string source_path = 2;
	string destination_path = 3;
}

message CreateFileRequest {
	string session_id = 1;
	string path = 2;
	string resource = 3;
}

message CreateFileResponse {
	string file_handle_id = 1;
	Entry entry = 2;
}

message OpenFileRequest {
	string session_id = 1;
	string path = 2;
	string resource = 3;
	string mode = 4;
}

message OpenFileResponse {
	string file_handle_id = 1;
	Entry entry = 2;
}

message TruncateFileRequest {
	string session_id = 1;
	string path = 2;
	int64 size = 3;
}

message GetOffsetRequest {
	string session_id = 1;
	string file_handle_id = 2;
}

message GetOffsetResponse {
	int64 offset = 1;
}

message ReadAtRequest {
	string session_id = 1;
	string file_handle_id = 2;
	int64 offset = 3;
	int32 length = 4;
}

message ReadAtResponse {
	bytes data = 1;
}

message WriteAtRequest {
	string session_id = 1;
	string file_handle_id = 2;
	int64 offset = 3;
	bytes data = 4;
}

message CloseRequest {
	string session_id = 1;
	string file_handle_id = 2;
}

service ProxyAPI {
	rpc Login(LoginRequest) returns (LoginResponse) {}
	rpc Logout(LogoutRequest) returns (Empty) {}
	rpc List(ListRequest) returns (ListResponse) {}
	rpc Stat(StatRequest) returns (StatResponse) {}
	rpc ExistsDir(ExistsDirRequest) returns (ExistsDirResponse) {}
	rpc ExistsFile(ExistsFileRequest) returns (ExistsFileResponse) {}

	rpc ListDirACLsWithGroupUsers(ListDirACLsWithGroupUsersRequest) returns (ListDirACLsWithGroupUsersResponse) {}
	rpc ListFileACLsWithGroupUsers(ListFileACLsWithGroupUsersRequest) returns (ListFileACLsWithGroupUsersResponse) {}
	rpc RemoveFile(RemoveFileRequest) returns (Empty) {}
	rpc RemoveDir(RemoveDirRequest) returns (Empty) {}
	rpc MakeDir(MakeDirRequest) returns (Empty) {}
	rpc RenameDirToDir(RenameDirToDirRequest) returns (Empty) {}
	rpc RenameFileToFile(RenameFileToFileRequest) returns (Empty) {}
	rpc CreateFile(CreateFileRequest) returns (CreateFileResponse) {}
	rpc OpenFile(OpenFileRequest) returns (OpenFileResponse) {}
	rpc TruncateFile(TruncateFileRequest) returns (Empty) {}
	
	// file 
	rpc GetOffset(GetOffsetRequest) returns (GetOffsetResponse) {}
	rpc ReadAt(ReadAtRequest) returns (ReadAtResponse) {}
	rpc WriteAt(WriteAtRequest) returns (Empty) {}
	rpc Close(CloseRequest) returns (Empty) {}
}